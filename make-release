#!/bin/bash

# Exit immediately if a command exits with a non-zero status.
set -e

# Fetch all tags from the remote repository to ensure we have the latest information.
echo "Fetching latest tags from origin..."
git fetch --tags origin

# Get the current date in YYYYMMDD format.
DATE_PART=$(date +%Y%m%d)
TAG_PREFIX="v0.${DATE_PART}"

# Find the latest build number for today's date.
# It lists all tags for today, extracts the build number (the part after the dot),
# sorts them numerically in reverse order, and takes the first one (the highest).
LATEST_BUILD_NUMBER=$(git tag -l "${TAG_PREFIX}.*" | awk -F. '{print $2}' | sort -nr | head -n 1)

# Determine the next build number.
if [ -z "$LATEST_BUILD_NUMBER" ]; then
  # If no build exists for today, start with 1.
  NEXT_BUILD_NUMBER=1
else
  # Otherwise, increment the latest build number.
  NEXT_BUILD_NUMBER=$((LATEST_BUILD_NUMBER + 1))
fi

# Construct the full new tag.
NEW_TAG="${TAG_PREFIX}.${NEXT_BUILD_NUMBER}"

echo "Creating new tag: ${NEW_TAG}"
git tag "${NEW_TAG}"

echo "Pushing new tag to origin..."
git push origin "${NEW_TAG}"

echo "Successfully created and pushed tag ${NEW_TAG}. The release process should now start on GitHub Actions."
